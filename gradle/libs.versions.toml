[versions]
detekt = "1.23.1"
ktlint_gradle = "11.6.1"
benmanesversion = "0.49.0"

kotlin = "1.9.0"
shadow = "8.1.1"

kotlinx_serialization = "1.6.0"
kotlinx_coroutines = "1.7.3"

jwt = "0.12.3"
ktor = "2.3.5"
config = "1.4.3"

protobuf = "3.24.4"
protobuf_plugin = "0.9.4"
protobuf_grpc = "1.58.0"
protobuf_grpc_kotlin = "1.4.0"

logging_slf4j = "2.0.9"
logging_log4j = "2.21.1"
logging_kotlin = "5.1.0"
logging_slf4j_liquibase = "5.0.0"

h2 = "2.2.224"
jedis = "5.0.2"
psql = "42.6.0"
psql_tc = "1.19.1"
jooq = "3.18.2"
jooq_plugin = "8.2"
hikari = "5.0.1"
liquibase = "4.24.0"

spring = "3.1.5"
spring_dm = "1.1.3"
spring_web = "6.0.13"
spring_doc = "2.0.2"
spring_grpc = "2.15.0.RELEASE"

junit = "5.10.0"
hamkrest = "1.8.0.1"

[libraries]
kgp = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt_formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

config = { module = "com.typesafe:config", version.ref = "config" }

h2 = { module = "com.h2database:h2", version.ref = "h2" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
psql = { module = "org.postgresql:postgresql", version.ref = "psql" }
psql_tc = { module = "org.testcontainers:postgresql", version.ref = "psql.tc" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq_liquibase = { module = "org.jooq:jooq-meta-extensions-liquibase", version.ref = "jooq" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
liquibase = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }

kotlinx_serialization_json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx.serialization" }
kotlinx_coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx.coroutines" }

ktor_client_core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor_client_cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor_client_content_negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

ktor_serialization_kotlinx_json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

protobuf_kt = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf_protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }
protobuf_grpc_java = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "protobuf.grpc" }
protobuf_grpc_kotlin = { module = "io.grpc:protoc-gen-grpc-kotlin", version.ref = "protobuf.grpc.kotlin" }

grpc_core = { module = "io.grpc:grpc-core", version.ref = "protobuf.grpc" }
grpc_api = { module = "io.grpc:grpc-api", version.ref = "protobuf.grpc" }
grpc_stub_kt = { module = "io.grpc:grpc-kotlin-stub", version.ref = "protobuf.grpc.kotlin" }
grpc_protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "protobuf.grpc" }
grpc_netty = { module = "io.grpc:grpc-netty", version.ref = "protobuf.grpc" }

spring_boot = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring" }
spring_web = { module = "org.springframework:spring-web", version.ref = "spring.web" }
spring_doc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring.doc" }
spring_grpc = { module = "net.devh:grpc-client-spring-boot-starter", version.ref = "spring.grpc" }

logging_slf4j = { module = "org.slf4j:slf4j-api", version.ref = "logging.slf4j" }
logging_kotlin = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "logging.kotlin" }
logging_log4j_core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "logging.log4j" }
logging_log4j_slf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "logging.log4j" }
logging_slf4j_liquibase = { module = "com.mattbertolini:liquibase-slf4j", version.ref = "logging.slf4j.liquibase" }

junit_bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit_jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }

hamkrest = { module = "com.natpryce:hamkrest", version.ref = "hamkrest" }

jwt_api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt" }
jwt_impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt" }
jwt_gson = { module = "io.jsonwebtoken:jjwt-gson", version.ref = "jwt" }

[bundles]

ktor_client = [ "ktor.client.core", "ktor.client.cio", "ktor.client.content.negotiation", "ktor.serialization.kotlinx.json" ]
logging = [ "logging.slf4j", "logging.log4j.core", "logging.log4j.slf4j", "logging.kotlin", "logging.slf4j.liquibase" ]
spring = [ "spring.boot", "spring.web", "spring.doc", "spring.grpc" ]
grpc = [ "grpc.core", "grpc.api", "grpc.stub.kt", "grpc.protobuf", "grpc.netty" ]
jwt = [ "jwt.api", "jwt.impl", "jwt.gson" ]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint.gradle" }
versions = { id = "com.github.ben-manes.versions", version.ref = "benmanesversion" }
jooq = { id = "nu.studer.jooq", version.ref = "jooq.plugin" }

kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx_spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinx_serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }

spring_boot = { id = "org.springframework.boot", version.ref = "spring" }
spring_dependencies = { id = "io.spring.dependency-management", version.ref = "spring.dm" }

protobuf = { id = "com.google.protobuf", version.ref = "protobuf.plugin" }
